[
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 800800,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUpScenario(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5873578500,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.beforeScenario(Scenario)"
            }
          }
        ],
        "line": 5,
        "name": "Verify registration of Small Yes",
        "description": "",
        "id": "create-cases;verify-registration-of-small-yes",
        "after": [
          {
            "result": {
              "duration": 2448270100,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.embedScreenshot(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4200975500,
              "status": "passed"
            },
            "line": 7,
            "name": "the user is on the login page of \"Case Handling System\" application",
            "match": {
              "arguments": [
                {
                  "val": "Case Handling System",
                  "offset": 34
                }
              ],
              "location": "Address.the_user_is_on_the_login_page_of_application(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PageName"
                ],
                "line": 8
              },
              {
                "cells": [
                  "Login"
                ],
                "line": 9
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3442080200,
              "status": "passed"
            },
            "line": 10,
            "name": "the user enters \"UserName\" in the \"Microsoft UserName\" textbox",
            "match": {
              "arguments": [
                {
                  "val": "UserName",
                  "offset": 17
                },
                {
                  "val": "Microsoft UserName",
                  "offset": 35
                }
              ],
              "location": "Address.the_user_enters_in_the_textbox(String,String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PageName"
                ],
                "line": 11
              },
              {
                "cells": [
                  "Login"
                ],
                "line": 12
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1761832600,
              "status": "passed"
            },
            "line": 13,
            "name": "the user clicks on the \"Microsoft Next\" button",
            "match": {
              "arguments": [
                {
                  "val": "Microsoft Next",
                  "offset": 24
                }
              ],
              "location": "Address.the_user_clicks_on_the_button(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PageName"
                ],
                "line": 14
              },
              {
                "cells": [
                  "Login"
                ],
                "line": 15
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 20170336300,
              "error_message": "org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\".//*[text()\u003d\u0027Customer Service Agent Dashboard\u0027]\"}\n  (Session info: chrome\u003d85.0.4183.83)\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.7.0\u0027, revision: \u00272321c73\u0027, time: \u00272017-11-02T22:22:35.584Z\u0027\nSystem info: host: \u0027PCLIWAPP0068\u0027, ip: \u002710.183.12.190\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_251\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 85.0.4183.83, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\\Users\\m81079\\AppData\\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:63774}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 4fae09258ad0bdd359d09c98a44bb64b\n*** Element info: {Using\u003dxpath, value\u003d.//*[text()\u003d\u0027Customer Service Agent Dashboard\u0027]}\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:600)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:370)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:472)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:361)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)\r\n\tat ReusableFunctions.Reusable.waitForelement(Reusable.java:298)\r\n\tat ReusableFunctions.Reusable.getElement(Reusable.java:250)\r\n\tat SeleniumGlueCode.Address.the_should_be_displayed(Address.java:147)\r\n\tat âœ½.Then the \"CHS Homepage\" should be displayed(1.Cases.feature:16)\r\n",
              "status": "failed"
            },
            "line": 16,
            "name": "the \"CHS Homepage\" should be displayed",
            "match": {
              "arguments": [
                {
                  "val": "CHS Homepage",
                  "offset": 5
                }
              ],
              "location": "Address.the_should_be_displayed(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PageName"
                ],
                "line": 17
              },
              {
                "cells": [
                  "HomePage"
                ],
                "line": 18
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 19,
            "name": "the user clicks on the \"Addresses\" button",
            "match": {
              "arguments": [
                {
                  "val": "Addresses",
                  "offset": 24
                }
              ],
              "location": "Address.the_user_clicks_on_the_button(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PageName"
                ],
                "line": 20
              },
              {
                "cells": [
                  "HomePage"
                ],
                "line": 21
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 22,
            "name": "the \"Aktive Adresser Page\" should be displayed",
            "match": {
              "arguments": [
                {
                  "val": "Aktive Adresser Page",
                  "offset": 5
                }
              ],
              "location": "Address.the_should_be_displayed(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PageName"
                ],
                "line": 23
              },
              {
                "cells": [
                  "Addresses"
                ],
                "line": 24
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "the user enters \"Address\" in the \"Search this View\" textbox",
            "match": {
              "arguments": [
                {
                  "val": "Address",
                  "offset": 17
                },
                {
                  "val": "Search this View",
                  "offset": 34
                }
              ],
              "location": "Address.the_user_enters_in_the_textbox(String,String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PageName"
                ],
                "line": 26
              },
              {
                "cells": [
                  "Addresses"
                ],
                "line": 27
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 28,
            "name": "the user clicks on the \"Search\" button",
            "match": {
              "arguments": [
                {
                  "val": "Search",
                  "offset": 24
                }
              ],
              "location": "Address.the_user_clicks_on_the_button(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PageName"
                ],
                "line": 29
              },
              {
                "cells": [
                  "Addresses"
                ],
                "line": 30
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 31,
            "name": "the \"Searched Address\" with text \"Address\" should be displayed",
            "match": {
              "arguments": [
                {
                  "val": "Searched Address",
                  "offset": 5
                },
                {
                  "val": "Address",
                  "offset": 34
                }
              ],
              "location": "Address.the_with_text_should_be_displayed(String,String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PageName"
                ],
                "line": 32
              },
              {
                "cells": [
                  "Addresses"
                ],
                "line": 33
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 34,
            "name": "the user clicks on the \"Searched Address\" button",
            "match": {
              "arguments": [
                {
                  "val": "Searched Address",
                  "offset": 24
                }
              ],
              "location": "Address.the_user_clicks_on_the_button(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PageName"
                ],
                "line": 35
              },
              {
                "cells": [
                  "Addresses"
                ],
                "line": 36
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 37,
            "name": "the \"Address Page\" with text \"Address\" should be displayed",
            "match": {
              "arguments": [
                {
                  "val": "Address Page",
                  "offset": 5
                },
                {
                  "val": "Address",
                  "offset": 30
                }
              ],
              "location": "Address.the_with_text_should_be_displayed(String,String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PageName"
                ],
                "line": 38
              },
              {
                "cells": [
                  "Addresses"
                ],
                "line": 39
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 40,
            "name": "the value of \"Installation Address\" should be \"Address\"",
            "match": {
              "arguments": [
                {
                  "val": "Installation Address",
                  "offset": 14
                },
                {
                  "val": "Address",
                  "offset": 47
                }
              ],
              "location": "Address.the_value_of_should_be(String,String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PageName"
                ],
                "line": 41
              },
              {
                "cells": [
                  "Addresses"
                ],
                "line": 42
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "the \"Primary Contact\" with text \"ContactName\" should be displayed",
            "match": {
              "arguments": [
                {
                  "val": "Primary Contact",
                  "offset": 5
                },
                {
                  "val": "ContactName",
                  "offset": 33
                }
              ],
              "location": "Address.the_with_text_should_be_displayed(String,String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PageName"
                ],
                "line": 44
              },
              {
                "cells": [
                  "Addresses"
                ],
                "line": 45
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 47,
            "name": "the user clicks on the \"Cases\" button",
            "match": {
              "arguments": [
                {
                  "val": "Cases",
                  "offset": 24
                }
              ],
              "location": "Address.the_user_clicks_on_the_button(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PageName"
                ],
                "line": 48
              },
              {
                "cells": [
                  "HomePage"
                ],
                "line": 49
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 50,
            "name": "the \"Cases Page\" should be displayed",
            "match": {
              "arguments": [
                {
                  "val": "Cases Page",
                  "offset": 5
                }
              ],
              "location": "Address.the_should_be_displayed(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PageName"
                ],
                "line": 51
              },
              {
                "cells": [
                  "Cases"
                ],
                "line": 52
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 53,
            "name": "the user clicks on the \"New Case\" button",
            "match": {
              "arguments": [
                {
                  "val": "New Case",
                  "offset": 24
                }
              ],
              "location": "Address.the_user_clicks_on_the_button(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PageName"
                ],
                "line": 54
              },
              {
                "cells": [
                  "Cases"
                ],
                "line": 55
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 56,
            "name": "the \"New Case Page\" should be displayed",
            "match": {
              "arguments": [
                {
                  "val": "New Case Page",
                  "offset": 5
                }
              ],
              "location": "Address.the_should_be_displayed(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PageName"
                ],
                "line": 57
              },
              {
                "cells": [
                  "Cases"
                ],
                "line": 58
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 59,
            "name": "the user enters \"Address\" in the \"Adresse\" Itextbox",
            "match": {
              "arguments": [
                {
                  "val": "Address",
                  "offset": 17
                },
                {
                  "val": "Adresse",
                  "offset": 34
                }
              ],
              "location": "Cases.the_user_enters_in_the_Itextbox(String,String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PageName"
                ],
                "line": 60
              },
              {
                "cells": [
                  "Cases"
                ],
                "line": 61
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 62,
            "name": "the user allows \"1\" seconds to load the \"Adresse Searched Result\"",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 17
                },
                {
                  "val": "Adresse Searched Result",
                  "offset": 41
                }
              ],
              "location": "Cases.the_user_allows_seconds_to_load_the(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 63,
            "name": "the user clicks on the \"Adresse Searched Result\" Ibutton",
            "match": {
              "arguments": [
                {
                  "val": "Adresse Searched Result",
                  "offset": 24
                }
              ],
              "location": "Cases.the_user_clicks_on_the_Ibutton(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PageName"
                ],
                "line": 64
              },
              {
                "cells": [
                  "Cases"
                ],
                "line": 65
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 66,
            "name": "the user enters \"ContactName\" in the \"Contact\" textbox",
            "match": {
              "arguments": [
                {
                  "val": "ContactName",
                  "offset": 17
                },
                {
                  "val": "Contact",
                  "offset": 38
                }
              ],
              "location": "Address.the_user_enters_in_the_textbox(String,String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PageName"
                ],
                "line": 67
              },
              {
                "cells": [
                  "Contacts"
                ],
                "line": 68
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 70,
                "value": "#When the user enters \"ContactName\" in the \"Contact\" textbox and then clicks on the \"Search\" button"
              },
              {
                "line": 71,
                "value": "#|PageName|"
              },
              {
                "line": 72,
                "value": "#|Contacts|"
              }
            ],
            "line": 73,
            "name": "the user allows \"2\" seconds to load the \"Contact Searched Result\"",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 17
                },
                {
                  "val": "Contact Searched Result",
                  "offset": 41
                }
              ],
              "location": "Cases.the_user_allows_seconds_to_load_the(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 74,
            "name": "the user clicks on the \"Contact Searched Result\" button",
            "match": {
              "arguments": [
                {
                  "val": "Contact Searched Result",
                  "offset": 24
                }
              ],
              "location": "Address.the_user_clicks_on_the_button(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PageName"
                ],
                "line": 75
              },
              {
                "cells": [
                  "Contacts"
                ],
                "line": 76
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 77,
                "value": "#When the user enters \"DepartmentName\" in the \"Department\" textbox"
              },
              {
                "line": 78,
                "value": "#|PageName|"
              },
              {
                "line": 79,
                "value": "#|Contacts|"
              }
            ],
            "line": 80,
            "name": "the user enters \"DepartmentName\" in the \"Department\" textbox and then clicks on the \"Search\" button",
            "match": {
              "arguments": [
                {
                  "val": "DepartmentName",
                  "offset": 17
                },
                {
                  "val": "Department",
                  "offset": 41
                },
                {
                  "val": "Search",
                  "offset": 85
                }
              ],
              "location": "Address.the_user_enters_in_the_textbox_and_then_clicks_on_the_button(String,String,String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PageName"
                ],
                "line": 81
              },
              {
                "cells": [
                  "Contacts"
                ],
                "line": 82
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 83,
            "name": "the user again clicks on \"Search\" if \"Department Searched Result\" is not visible",
            "match": {
              "arguments": [
                {
                  "val": "Search",
                  "offset": 26
                },
                {
                  "val": "Department Searched Result",
                  "offset": 38
                }
              ],
              "location": "Address.the_user_again_clicks_on_if_is_not_visible(String,String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PageName"
                ],
                "line": 84
              },
              {
                "cells": [
                  "Contacts"
                ],
                "line": 85
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 86,
            "name": "the user allows \"2\" seconds to load the \"Contact Searched Result\"",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 17
                },
                {
                  "val": "Contact Searched Result",
                  "offset": 41
                }
              ],
              "location": "Cases.the_user_allows_seconds_to_load_the(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 87,
            "name": "the user clicks on the \"Department Searched Result\" button",
            "match": {
              "arguments": [
                {
                  "val": "Department Searched Result",
                  "offset": 24
                }
              ],
              "location": "Address.the_user_clicks_on_the_button(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PageName"
                ],
                "line": 88
              },
              {
                "cells": [
                  "Contacts"
                ],
                "line": 89
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 90,
                "value": "#When the user enters \"Kundeservice Subject Name\" in the \"Subject\" textbox"
              },
              {
                "line": 91,
                "value": "#|PageName|"
              },
              {
                "line": 92,
                "value": "#|Contacts|"
              }
            ],
            "line": 93,
            "name": "the user enters \"Kundeservice Subject Name\" in the \"Subject\" textbox and then clicks on the \"Search\" button",
            "match": {
              "arguments": [
                {
                  "val": "Kundeservice Subject Name",
                  "offset": 17
                },
                {
                  "val": "Subject",
                  "offset": 52
                },
                {
                  "val": "Search",
                  "offset": 93
                }
              ],
              "location": "Address.the_user_enters_in_the_textbox_and_then_clicks_on_the_button(String,String,String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PageName"
                ],
                "line": 94
              },
              {
                "cells": [
                  "Contacts"
                ],
                "line": 95
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 97,
            "name": "the user again clicks on \"Search\" if \"Subject Searched Result\" is not visible",
            "match": {
              "arguments": [
                {
                  "val": "Search",
                  "offset": 26
                },
                {
                  "val": "Subject Searched Result",
                  "offset": 38
                }
              ],
              "location": "Address.the_user_again_clicks_on_if_is_not_visible(String,String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PageName"
                ],
                "line": 98
              },
              {
                "cells": [
                  "Contacts"
                ],
                "line": 99
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 100,
            "name": "the user allows \"2\" seconds to load the \"Contact Searched Result\"",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 17
                },
                {
                  "val": "Contact Searched Result",
                  "offset": 41
                }
              ],
              "location": "Cases.the_user_allows_seconds_to_load_the(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 101,
            "name": "the user clicks on the \"Subject Searched Result\" button",
            "match": {
              "arguments": [
                {
                  "val": "Subject Searched Result",
                  "offset": 24
                }
              ],
              "location": "Address.the_user_clicks_on_the_button(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PageName"
                ],
                "line": 102
              },
              {
                "cells": [
                  "Contacts"
                ],
                "line": 103
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 104,
            "name": "the user enters \"-Register Small Yes\" in the \"Description\" textbox",
            "match": {
              "arguments": [
                {
                  "val": "-Register Small Yes",
                  "offset": 17
                },
                {
                  "val": "Description",
                  "offset": 46
                }
              ],
              "location": "Address.the_user_enters_in_the_textbox(String,String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PageName"
                ],
                "line": 105
              },
              {
                "cells": [
                  "Contacts"
                ],
                "line": 106
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 107,
            "name": "the user clicks on the \"Save\" button",
            "match": {
              "arguments": [
                {
                  "val": "Save",
                  "offset": 24
                }
              ],
              "location": "Address.the_user_clicks_on_the_button(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PageName"
                ],
                "line": 108
              },
              {
                "cells": [
                  "Contacts"
                ],
                "line": 109
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 110,
            "name": "the \"General Information Contact Name\" with text \"ContactName\" should be displayed",
            "match": {
              "arguments": [
                {
                  "val": "General Information Contact Name",
                  "offset": 5
                },
                {
                  "val": "ContactName",
                  "offset": 50
                }
              ],
              "location": "Address.the_with_text_should_be_displayed(String,String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PageName"
                ],
                "line": 111
              },
              {
                "cells": [
                  "Cases"
                ],
                "line": 112
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 113,
            "name": "the user allows \"2\" seconds to load the \"Result\"",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 17
                },
                {
                  "val": "Result",
                  "offset": 41
                }
              ],
              "location": "Cases.the_user_allows_seconds_to_load_the(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 114,
            "name": "the user notes the below mention fields for further evaluation",
            "match": {
              "location": "Contacts.the_user_notes_the_below_mention_fields_for_further_evaluation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Fields",
                  "PageName",
                  "Identifier"
                ],
                "line": 115
              },
              {
                "cells": [
                  "Case Number Generated",
                  "Cases",
                  "Value"
                ],
                "line": 116
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 117,
            "name": "the user allows \"3\" seconds to load the \"Result\"",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 17
                },
                {
                  "val": "Result",
                  "offset": 41
                }
              ],
              "location": "Cases.the_user_allows_seconds_to_load_the(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 118,
            "name": "the user clicks on the \"Address Information\" button",
            "match": {
              "arguments": [
                {
                  "val": "Address Information",
                  "offset": 24
                }
              ],
              "location": "Address.the_user_clicks_on_the_button(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PageName"
                ],
                "line": 119
              },
              {
                "cells": [
                  "Cases"
                ],
                "line": 120
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 121,
            "name": "the \"Fibernet Availability\" with text \"-Fiber possible\" should be displayed",
            "match": {
              "arguments": [
                {
                  "val": "Fibernet Availability",
                  "offset": 5
                },
                {
                  "val": "-Fiber possible",
                  "offset": 39
                }
              ],
              "location": "Address.the_with_text_should_be_displayed(String,String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PageName"
                ],
                "line": 122
              },
              {
                "cells": [
                  "Cases"
                ],
                "line": 123
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 124,
                "value": "#And the \"Wish list registered\" with text \"-No\" should be displayed"
              },
              {
                "line": 125,
                "value": "#|PageName|"
              },
              {
                "line": 126,
                "value": "#|Cases|"
              },
              {
                "line": 127,
                "value": "#And the \"Small yes registered\" with text \"-No\" should be displayed"
              },
              {
                "line": 128,
                "value": "#|PageName|"
              },
              {
                "line": 129,
                "value": "#|Cases|"
              }
            ],
            "line": 130,
            "name": "the user clicks on the \"Register Small Yes Button\" button",
            "match": {
              "arguments": [
                {
                  "val": "Register Small Yes Button",
                  "offset": 24
                }
              ],
              "location": "Address.the_user_clicks_on_the_button(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PageName"
                ],
                "line": 131
              },
              {
                "cells": [
                  "Cases"
                ],
                "line": 132
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 133,
            "name": "the \"Registration send to Agilic\" should be displayed",
            "match": {
              "arguments": [
                {
                  "val": "Registration send to Agilic",
                  "offset": 5
                }
              ],
              "location": "Address.the_should_be_displayed(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "PageName"
                ],
                "line": 134
              },
              {
                "cells": [
                  "Cases"
                ],
                "line": 135
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 4,
            "name": "@RegisterSmallYES"
          }
        ]
      }
    ],
    "name": "Create Cases",
    "description": "",
    "id": "create-cases",
    "keyword": "Feature",
    "uri": "1.Cases.feature",
    "tags": [
      {
        "line": 1,
        "name": "@CreationofCases"
      }
    ]
  }
]